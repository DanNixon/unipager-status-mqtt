---
name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  formatting-and-quality:
    name: Formatting and Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup
        run: rustup component add clippy rustfmt

      - name: Format
        run: cargo fmt -- --check

      - name: Clippy
        run: cargo clippy -- -Dwarnings

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Build and Test
        run: cargo test

  release-builds:
    name: Build
    if: ${{ github.ref_name == 'main' || github.ref_type == 'tag' }}
    needs:
      - build-and-test
      - formatting-and-quality
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl

    steps:
      - uses: actions/checkout@v2

      - name: Setup
        run: cargo install cross

      - name: Build
        id: cross-build
        run: |
          cross build --release --target ${{ matrix.platform }}
          cp "target/${{ matrix.platform }}/release/unipager-mqtt-status" "unipager-mqtt-status-${{ matrix.platform }}"

      - name: Store binary
        uses: actions/upload-artifact@v3
        with:
          name: "unipager-mqtt-status-${{ matrix.platform }}"
          path: "unipager-mqtt-status-${{ matrix.platform }}"

  release:
    name: Release
    if: ${{ github.ref_type == 'tag' }}
    needs:
      - release-builds
    runs-on: ubuntu-latest

    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4.1.7

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: unipager-mqtt-status-*/unipager-mqtt-status-*
          fail_on_unmatched_files: true
